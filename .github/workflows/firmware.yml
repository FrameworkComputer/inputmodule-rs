name: Firmware CI Checks
on:
  push

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  building:
    name: Build ${{ matrix.platform }} (${{ matrix.target }})
    strategy:
      matrix:
        target: ['debug', 'release']
        platform: [b1display, c1minimal, ledmatrix]
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain
        run: rustup show

      - run: cargo install flip-link

      - name: Build release firmware
        if: ${{ matrix.target }} == 'release'
        run: |
            make PLATFORM=${{ matrix.platform }} release

      - name: Build debug firmware
        if: ${{ matrix.target }} == 'debug'
        run: |
            cargo build -p ${{ matrix.platform }}

      - name: Convert to UF2 file
        run: |
            sudo apt-get update
            sudo apt-get install -y libudev-dev
            cargo install elf2uf2-rs
            elf2uf2-rs target/thumbv6m-none-eabi/${{ matrix.target }}/${{ matrix.platform }} ${{ matrix.platform }}.uf2

      - name: Show hash of firmare
        run: |
            sha256sum target/thumbv6m-none-eabi/${{ matrix.target }}/${{ matrix.platform }}
            sha256sum ${{ matrix.platform }}.uf2

      - name: Upload Linux tool
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}.uf2
          path: |
            ${{ matrix.platform }}.uf2

  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Rust toolchain
        run: rustup show

      - run: |
          cargo clippy -p b1display -- --deny=warnings
          cargo clippy -p c1minimal -- --deny=warnings
          cargo clippy -p ledmatrix -- --deny=warnings

  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Rust toolchain
        run: rustup show

      - run: cargo fmt --all -- --check
