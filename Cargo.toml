# Not stable yet :(
# Trackign issue: https://github.com/rust-lang/cargo/issues/9406
# cargo-features = ["per-package-target"]

[workspace]
resolver = "2"
members = [
    "b1display",
    "c1minimal",
    "ledmatrix",
    "fl16-inputmodules",
    "inputmodule-control"
]
# Don't build all of them by default.
# Because that'll lead to all features enabled in `fl16-inputmodules` and it
# doesn't currently support building with all features enabled at the same
# time.
# Can't add `inputmodule-control` because it must be built with the host system
# target. But we set the default target to thumbv6m-none-eabi
default-members = [
    "fl16-inputmodules",
]

#[patch.'https://github.com/rp-rs/rp-hal.git']
#rp2040-hal = { path = "./rp2040-hal" }
#
#[patch.crates-io]
#rp2040-hal = { path = "./rp2040-hal" }

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
# To allow single-stepping through code use 0. Will cause timing issues, though
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
